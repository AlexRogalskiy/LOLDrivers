[
    {
        "Name": "MsIo64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "",
            "Description": "The MSI AmbientLink MsIo64 driver 1.0.0.8 has a Buffer Overflow (0x80102040, 0x80102044, 0x80102050,and 0x80102054)",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "to be found",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "d3.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "ellp_service.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://eclypsium.com/2019/11/12/mother-of-all-drivers/"
        ],
        "driver_description": "https://eclypsium.com/2019/11/12/mother-of-all-drivers/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "aswsnx.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/jbaines-r7/dellicious",
            " https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/"
        ],
        "driver_description": "https://github.com/jbaines-r7/dellicious and https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "BS_RCIO.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "WinRing0.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "WCPU.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "WinFlash64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "BSMIx64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "dbutil_2_3.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "hw_sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "nt2.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "HwOs2Ec10x64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "iQVW64.SYS",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "",
            "Description": "(1) IQVW32.sys before 1.3.1.0 and (2) IQVW64.sys before 1.3.1.0 in the Intel Ethernet diagnostics driver for Windows allows local users to cause a denial of service or possibly execute arbitrary code with kernel privileges via a crafted (a) 0x80862013, (b) 0x8086200B, (c) 0x8086200F, or (d) 0x80862007 IOCTL call.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [],
        "driver_description": "",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "4429f32db1cc70567919d7d47b844a91cf1329a6cd116f582305f3b7b60cd60b",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "Intel",
            "Description": "Intel(R) Network Adapter Diagnostic Driver",
            "Product": "Intel(R) iQVW64.SYS",
            "ProductVersion": "",
            "FileVersion": "1.03.0.7 built by: WinDDK",
            "MachineType": "x64",
            "OriginalFilename": "iQVW64.SYS"
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "WYProxy64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "RTCore64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "",
            "Description": "The driver in Micro-Star MSI Afterburner 4.6.2.15658 (aka RTCore64.sys and RTCore32.sys) allows any authenticated user to read and write to arbitrary memory, I/O ports, and MSRs. This can be exploited for privilege escalation, code execution under high privileges, and information disclosure. These signed drivers can also be used to bypass the Microsoft driver-signing policy to deploy malicious code.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "01aa278b07b58dc46c84bd0b1b5c8e9ee4e62ea0bf7a695862444af32e87f1fd\nCDD2A4575A46BADA4837A6153A79C14D60EE3129830717EF09E0E3EFD9D00812",
        "Metadata": {
            "binary": "",
            "Verified": "N/A",
            "Date": "N/A",
            "Publisher": "N/A",
            "Company": "N/A",
            "Description": "N/A",
            "Product": "N/A",
            "ProductVersion": "N/A",
            "FileVersion": "N/A",
            "MachineType": "x64\nx32",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "rtkiow8x64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "HWiNFO64A.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "t.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "viraglt64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/jbaines-r7/dellicious",
            " https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/"
        ],
        "driver_description": "https://github.com/jbaines-r7/dellicious and https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "kbdcap64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "BS_HWMIo64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "PanMonFlt.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "Proxy32.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "nvflash.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "AsIO64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "ATSZIO.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://gist.github.com/k4nfr3/af970e7facb09195e56f2112e1c9549c"
        ],
        "driver_description": "https://gist.github.com/k4nfr3/af970e7facb09195e56f2112e1c9549c",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "nicm.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/jbaines-r7/dellicious",
            " https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/"
        ],
        "driver_description": "https://github.com/jbaines-r7/dellicious and https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "nt3.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "nscm.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/jbaines-r7/dellicious",
            " https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/"
        ],
        "driver_description": "https://github.com/jbaines-r7/dellicious and https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "Agent64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "IOMap64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "full.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "WYProxy32.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "goad.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/jbaines-r7/dellicious",
            " https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/"
        ],
        "driver_description": "https://github.com/jbaines-r7/dellicious and https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "SmartDashboard.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://eclypsium.com/2019/11/12/mother-of-all-drivers/"
        ],
        "driver_description": "https://eclypsium.com/2019/11/12/mother-of-all-drivers/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "WinRing0x64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "smep_capcom.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "BlackBoneDrv10.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "HpPortIox64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "WinIO32.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "fiddrv.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "c.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "amp.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://gist.github.com/k4nfr3/af970e7facb09195e56f2112e1c9549c"
        ],
        "driver_description": "https://gist.github.com/k4nfr3/af970e7facb09195e56f2112e1c9549c",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "b1.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "AsUpIO64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "cpupress.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "bwrs.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "physmem.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/jbaines-r7/dellicious",
            " https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/"
        ],
        "driver_description": "https://github.com/jbaines-r7/dellicious and https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "IObitUnlocker.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "vboxdrv.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "",
            "Description": "Used by unknown actor in Acid Rain malware. ",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [],
        "driver_description": "https://unit42.paloaltonetworks.com/acidbox-rare-malware/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "78827fa00ea48d96ac9af8d1c1e317d02ce11793e7f7f6e4c7aac7b5d7dd490f",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "VirtualBox Support Driver",
            "Product": "Sun VirtualBox",
            "ProductVersion": "",
            "FileVersion": "2.2.0.r45846",
            "MachineType": "x64",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "LHA.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "SystemGauge.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://eclypsium.com/2019/11/12/mother-of-all-drivers/"
        ],
        "driver_description": "https://eclypsium.com/2019/11/12/mother-of-all-drivers/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "piddrv64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "netfilterdrv.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "cpuz.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "81.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "BSMIXP64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "Bs_Def.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "nstrwsk.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "AMDRyzenMasterDriver.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "GameFire.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://eclypsium.com/2019/11/12/mother-of-all-drivers/"
        ],
        "driver_description": "https://eclypsium.com/2019/11/12/mother-of-all-drivers/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "kEvP64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "GLCKIO2.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "BS_Flash64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "WinIO32B.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "OpenHardwareMonitor.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://eclypsium.com/2019/11/12/mother-of-all-drivers/"
        ],
        "driver_description": "https://eclypsium.com/2019/11/12/mother-of-all-drivers/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "elrawdsk.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/jbaines-r7/dellicious",
            " https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/"
        ],
        "driver_description": "https://github.com/jbaines-r7/dellicious and https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "viragt64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "BSMI.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "dbk64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "nvflsh64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "HOSTNT.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "pgldqpoc.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "semav6msr.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "LenovoDiagnosticsDriver.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "NTIOLib.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "t3.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "clfs.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://raw.githubusercontent.com/SigmaHQ/sigma/master/rules/windows/driver_load/driver_load_vuln_drivers_names.yml"
        ],
        "driver_description": "https://raw.githubusercontent.com/SigmaHQ/sigma/master/rules/windows/driver_load/driver_load_vuln_drivers_names.yml",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "dbutil.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "mtcBSv64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "ni.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "asmmap64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "b.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "HwOs2Ec7x64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "ProtectS.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "winio64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "Phymemx64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "b4.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "NalDrv.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://gist.github.com/k4nfr3/af970e7facb09195e56f2112e1c9549c"
        ],
        "driver_description": "https://gist.github.com/k4nfr3/af970e7facb09195e56f2112e1c9549c",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "ASIO32.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "inpoutx64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "AMDPowerProfiler.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "driver7-x86-withoutdbg.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/Chigusa0w0/AsusDriversPrivEscala"
        ],
        "driver_description": "https://github.com/Chigusa0w0/AsusDriversPrivEscala",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "AsrDrv103.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "zamguard64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "BS_RCIO64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/jbaines-r7/dellicious",
            " https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/"
        ],
        "driver_description": "https://github.com/jbaines-r7/dellicious and https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "1.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "PhlashNT.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "AsrIbDrv.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "EneTechIo64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://gist.github.com/k4nfr3/af970e7facb09195e56f2112e1c9549c"
        ],
        "driver_description": "https://gist.github.com/k4nfr3/af970e7facb09195e56f2112e1c9549c",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "ADV64DRV.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create ADV64DRV.sys binpath = c:\\temp\\ADV64DRV.sys.sys type=kernel start=auto displayname=\"ADV64DRV.sys vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [
            {
                "type": "BlockRule",
                "value": "https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-block-rules"
            },
            {
                "type": "IOC",
                "value": "Utilize Windows Event Code 7045 to monitor for new kernel driver installation."
            }
        ],
        "KnownHashes": "04A85E359525D662338CAE86C1E59B1D7AA9BD12B920E8067503723DC1E03162",
        "Metadata": {
            "binary": "",
            "Verified": "TRUE",
            "Date": "44896",
            "Publisher": "Microsoft Corp",
            "Company": "Microsoft Corp",
            "Description": "Software Driver",
            "Product": "NA",
            "ProductVersion": "1.0.2",
            "FileVersion": "4.3",
            "MachineType": "x64",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "rzpnk.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "WinIo64A.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "nt4.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "nt5.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "CITMDRV_IA64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "d2.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "superbmc.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "zam64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "capcom.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "semav6msr64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "SystemGaugeX7.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://eclypsium.com/2019/11/12/mother-of-all-drivers/"
        ],
        "driver_description": "https://eclypsium.com/2019/11/12/mother-of-all-drivers/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "fidpcidrv.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "DBUtilDrv2.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/jbaines-r7/dellicious",
            " https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/"
        ],
        "driver_description": "https://github.com/jbaines-r7/dellicious and https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "aswArPot.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc.exe create aswSP_ArPot2 binPath= C:\\windows\\temp\\aswArPot.sys type= kernel\nsc.exe start aswSP_ArPot2 ",
            "Description": "Avast’s “Anti Rootkit” driver (also used by AVG) has been found to be vulnerable to two high severity attacks that could potentially lead to privilege escalation by running code in the kernel from a non-administrator user.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "CVE-2022-26522, CVE-2022-26523: Both of these vulnerabilities were fixed in version 22.1.",
        "Acknowledgement": {
            "Person": "MattNotMax",
            "Handle": "@mattnotmax"
        },
        "Detection": [],
        "KnownHashes": "4b5229b3250c8c08b98cb710d6c056144271de099a57ae09f5d2097fc41bd4f1",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "2021-02-01 14:09:00",
            "Publisher": "",
            "Company": "AVAST Software",
            "Description": "Avast Anti Rootkit",
            "Product": "Avast Antivirus\n",
            "ProductVersion": "",
            "FileVersion": "21.1.187.0",
            "MachineType": "x64",
            "OriginalFilename": "aswArPot.sys"
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "PCHunter.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "AsrRapidStartDrv.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "AsUpIO.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "OpenHardwareMonitorReport.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://eclypsium.com/2019/11/12/mother-of-all-drivers/"
        ],
        "driver_description": "https://eclypsium.com/2019/11/12/mother-of-all-drivers/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "FairplayKD.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "My.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "CorsairLLAccess64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "gdrv.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "gdrv.sys is vulnerable to multiple CVEs: CVE-2018-19320, CVE-2018-19322, CVE-2018-19323, CVE-2018-19321. Read/Write Physical memory, read/write to/from IO ports, exposes ring0 memcpy-like functionality,  read and write Machine Specific Registers (MSRs).",
            "Usecase": "Elevate privileges, tamper with PPL or system processes",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://www.secureauth.com/labs/advisories/gigabyte-drivers-elevation-privilege-vulnerabilities",
            " https://medium.com/@fsx30/weaponizing-vulnerable-driver-for-privilege-escalation-gigabyte-edition-e73ee523598b"
        ],
        "driver_description": "",
        "Acknowledgement": {
            "Person": "MattNotMax",
            "Handle": "@mattnotmax"
        },
        "Detection": [],
        "KnownHashes": "31f4cfb4c71da44120752721103a16512444c13c2ac2d857a7e6f13cb679b427, ff6729518a380bf57f1bc6f1ec0aa7f3012e1618b8d9b0f31a61d299ee2b4339",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "2013-07-03, 17:32:00 UTC, 2017-11-30 18:40:00 UTC",
            "Publisher": "",
            "Company": "",
            "Description": "GIGABYTE Tools, GIGA-BYTE NonPNP Driver",
            "Product": "Windows (R) Server 2003 DDK driver, gdrv64",
            "ProductVersion": "",
            "FileVersion": "5.2.3790.1830 built by: WinDDK, 1.0.0.1",
            "MachineType": "x64, x64",
            "OriginalFilename": "gdrv.sys"
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "Proxy64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "amifldrv64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "procexp.Sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "WinIo64B.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "ncpl.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/jbaines-r7/dellicious",
            " https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/"
        ],
        "driver_description": "https://github.com/jbaines-r7/dellicious and https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "viragt.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "TGSafe.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "Mhyprot2.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "d.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "speedfan.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/jbaines-r7/dellicious",
            " https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/"
        ],
        "driver_description": "https://github.com/jbaines-r7/dellicious and https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "libnicm.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "windows-xp-64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "smep_namco.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "iomem64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "AsrDrv106.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "mhyprot3.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "windows7-32.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "atillk64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "msrhook.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "Black.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "mhyprot.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/jbaines-r7/dellicious",
            " https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/"
        ],
        "driver_description": "https://github.com/jbaines-r7/dellicious and https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "NetFlt.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "LgDCatcher.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "iqvw64e.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "",
            "Description": "(1) IQVW32.sys before 1.3.1.0 and (2) IQVW64.sys before 1.3.1.0 in the Intel Ethernet diagnostics driver for Windows allows local users to cause a denial of service or possibly execute arbitrary code with kernel privileges via a crafted (a) 0x80862013, (b) 0x8086200B, (c) 0x8086200F, or (d) 0x80862007 IOCTL call.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [],
        "driver_description": "",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "4429f32db1cc70567919d7d47b844a91cf1329a6cd116f582305f3b7b60cd60b",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "Intel",
            "Description": "Intel(R) Network Adapter Diagnostic Driver",
            "Product": "Intel(R) iQVW64.SYS",
            "ProductVersion": "",
            "FileVersion": "1.03.0.7 built by: WinDDK",
            "MachineType": "x64",
            "OriginalFilename": "iQVW64.SYS"
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "Lurker.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "nstr.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "2.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "ATSZIO64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "DirectIo32.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eset/vulnerability-disclosures/blob/master/CVE-2020-15480/CVE-2020-15480.md"
        ],
        "driver_description": "https://github.com/eset/vulnerability-disclosures/blob/master/CVE-2020-15480/CVE-2020-15480.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "hardwareproviders.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://eclypsium.com/2019/11/12/mother-of-all-drivers/"
        ],
        "driver_description": "https://eclypsium.com/2019/11/12/mother-of-all-drivers/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "MsIo.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "BS_Def64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "VideoNovaServerControllerService.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://eclypsium.com/2019/11/12/mother-of-all-drivers/"
        ],
        "driver_description": "https://eclypsium.com/2019/11/12/mother-of-all-drivers/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "Dh_Kernel_10.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "mydrivers.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "pcdsrvc_x64.pkms",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "nt6.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "Monitor_win10_x64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "PanMonFltX64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "fidpcidrv64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "touchpointanalyticsclient.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://eclypsium.com/2019/11/12/mother-of-all-drivers/"
        ],
        "driver_description": "https://eclypsium.com/2019/11/12/mother-of-all-drivers/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "WINIODrv.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "MsIo32.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "",
            "Description": "The MsIo64.sys and MsIo32.sys drivers in Patriot Viper RGB before 1.1 allow local users (including low integrity processes) to read and write to arbitrary memory locations, and consequently gain NT AUTHORITY\\SYSTEM privileges, by mapping \\Device\\PhysicalMemory into the calling process via ZwOpenSection and ZwMapViewOfSection.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "525d9b51a80ca0cd4c5889a96f857e73f3a80da1ffbae59851e0f51bdfb0b6cd",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "Lv561av.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "TmComm.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "BSMEMx64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "otipcibus.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "gameink.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "srvnetbus.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "80.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "BS_I2cIo.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "TestBone.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "Mslo64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "AsrSmartConnectDrv.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "d4.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "SysInfo.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "PanIO.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "NCHGBIOS2x64.SYS",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "UCOREW64.SYS",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "AsrDrv102.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "magdrvamd64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "AsrSetupDrv103.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "windows8-10-32.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "bw.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "krpocesshacker.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "BS_I2c64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "Dh_Kernel.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "AsrOmgDrv.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "cpuz141.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "fiddrv64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "CITMDRV_AMD64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "HwRwDrv.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "EneIo64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://gist.github.com/k4nfr3/af970e7facb09195e56f2112e1c9549c"
        ],
        "driver_description": "https://gist.github.com/k4nfr3/af970e7facb09195e56f2112e1c9549c",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "CAM_V3.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://eclypsium.com/2019/11/12/mother-of-all-drivers/"
        ],
        "driver_description": "https://eclypsium.com/2019/11/12/mother-of-all-drivers/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "BS_HWMIO64_W10.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "bwrsh.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "driver7-x64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/Chigusa0w0/AsusDriversPrivEscala"
        ],
        "driver_description": "https://github.com/Chigusa0w0/AsusDriversPrivEscala",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "sandbox.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/jbaines-r7/dellicious",
            " https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/"
        ],
        "driver_description": "https://github.com/jbaines-r7/dellicious and https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "GameTerSafe.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "procexp152.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/jbaines-r7/dellicious",
            " https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/"
        ],
        "driver_description": "https://github.com/jbaines-r7/dellicious and https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "rtkio64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "bandai.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "",
        "Author": "",
        "Created": "",
        "MitreID": "",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "",
            "Description": "",
            "Usecase": "",
            "Privileges": "",
            "OperatingSystem": ""
        },
        "Resources": [],
        "driver_description": "",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": []
    },
    {
        "Name": "rtkiow10x64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "OpenLibSys.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "kprocesshacker.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/jbaines-r7/dellicious",
            " https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/"
        ],
        "driver_description": "https://github.com/jbaines-r7/dellicious and https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "b3.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "sensorsview32_64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://eclypsium.com/2019/11/12/mother-of-all-drivers/"
        ],
        "driver_description": "https://eclypsium.com/2019/11/12/mother-of-all-drivers/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "rwdrv.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/jbaines-r7/dellicious",
            " https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/"
        ],
        "driver_description": "https://github.com/jbaines-r7/dellicious and https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "WinIO32A.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "cpuz_x64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "rtkio.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "Monitor.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "ALSysIO64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "t8.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "PanIOx64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "AsIO.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "DirectIo64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eset/vulnerability-disclosures/blob/master/CVE-2020-15480/CVE-2020-15480.md"
        ],
        "driver_description": "https://github.com/eset/vulnerability-disclosures/blob/master/CVE-2020-15480/CVE-2020-15480.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "OpenHardwareMonitorLib.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://eclypsium.com/2019/11/12/mother-of-all-drivers/"
        ],
        "driver_description": "https://eclypsium.com/2019/11/12/mother-of-all-drivers/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "asrdrv104.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "VProEventMonitor.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "driver7-x86.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/Chigusa0w0/AsusDriversPrivEscala"
        ],
        "driver_description": "https://github.com/Chigusa0w0/AsusDriversPrivEscala",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "gmer.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://raw.githubusercontent.com/SigmaHQ/sigma/master/rules/windows/driver_load/driver_load_vuln_drivers_names.yml"
        ],
        "driver_description": "https://raw.githubusercontent.com/SigmaHQ/sigma/master/rules/windows/driver_load/driver_load_vuln_drivers_names.yml",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "t7.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "AsrDrv101.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "NTIOLib_X64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "vmdrv.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "WiseUnlo.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "WinIo64C.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "ohm.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://eclypsium.com/2019/11/12/mother-of-all-drivers/"
        ],
        "driver_description": "https://eclypsium.com/2019/11/12/mother-of-all-drivers/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "AsrDrv10.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "Se64a.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "piddrv.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "sandra.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/jbaines-r7/dellicious",
            " https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/"
        ],
        "driver_description": "https://github.com/jbaines-r7/dellicious and https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "elbycdio.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/jbaines-r7/dellicious",
            " https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/"
        ],
        "driver_description": "https://github.com/jbaines-r7/dellicious and https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "ActiveHealth.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://eclypsium.com/2019/11/12/mother-of-all-drivers/"
        ],
        "driver_description": "https://eclypsium.com/2019/11/12/mother-of-all-drivers/",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "phymem64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "aswVmm.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/elastic/protections-artifacts/search?q=VulnDriver"
        ],
        "driver_description": "https://github.com/elastic/protections-artifacts/search?q=VulnDriver",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "NetProxyDriver.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "PCADRVX64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://raw.githubusercontent.com/SigmaHQ/sigma/master/rules/windows/driver_load/driver_load_vuln_drivers_names.yml"
        ],
        "driver_description": "https://raw.githubusercontent.com/SigmaHQ/sigma/master/rules/windows/driver_load/driver_load_vuln_drivers_names.yml",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "AsrAutoChkUpdDrv.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/namazso/physmem_drivers"
        ],
        "driver_description": "https://github.com/namazso/physmem_drivers",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "GVCIDrv64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "segwindrvx64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "NBIOLib_X64.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md"
        ],
        "driver_description": "https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    },
    {
        "Name": "DirectIo.sys",
        "Author": "Michael Haag",
        "Created": "2023-01-09",
        "MitreID": "T1068",
        "Category": "Vulnerable",
        "Commands": {
            "Command": "sc create CapCom binpath = c:\\temp\\capcom.sys type=kernel start=auto displayname=\"CapCom vulnerable Driver\"",
            "Description": "CapCom.sys is a vulnerable driver that has been abused over the years.",
            "Usecase": "Elevate privileges",
            "Privileges": "kernel",
            "OperatingSystem": "Windows 10"
        },
        "Resources": [
            " https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        ],
        "driver_description": "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules",
        "Acknowledgement": {
            "Person": "",
            "Handle": ""
        },
        "Detection": [],
        "KnownHashes": "",
        "Metadata": {
            "binary": "",
            "Verified": "",
            "Date": "",
            "Publisher": "",
            "Company": "",
            "Description": "",
            "Product": "",
            "ProductVersion": "",
            "FileVersion": "",
            "MachineType": "",
            "OriginalFilename": ""
        },
        "mitre_attack": {
            "technique_id": "T1068",
            "technique": "Exploitation for Privilege Escalation",
            "technique_description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
            "tactic": [
                "Privilege Escalation"
            ]
        }
    }
]